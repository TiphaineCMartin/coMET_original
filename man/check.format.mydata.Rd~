\name{check.format.mydata}
\alias{check.format.mydata}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
check.format.mydata(gbl.var, option, numfile)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{gbl.var}{
%%     ~~Describe \code{gbl.var} here~~
}
  \item{option}{
%%     ~~Describe \code{option} here~~
}
  \item{numfile}{
%%     ~~Describe \code{numfile} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (gbl.var, option, numfile) 
{
    if (option == 1) {
        cat("START CHECK.FORMAT.MYDATA\n")
        mydata.test <- gbl.var$mydata.data
        format <- as.character(gbl.var$split.format[[1]][numfile])
    }
    else {
        cat("START CHECK.FORMAT.MYDATA.LARGE\n")
        mydata.test <- gbl.var$mydata.large.data
        format <- as.character(gbl.var$large.split.format[[1]][numfile])
    }
    cat("mydata.test ", dim(mydata.test), "\n")
    cat("mydata.test ", colnames(mydata.test), "\n")
    cat("mydata.format ", format, "\n")
    if (is.null(mydata.test)) {
        stop("Missing MYDATA data file \n")
    }
    if (is.null(mydata.test$MYDATA.NAME)) {
        stop("Missing MYDATA data file column MYDATA.NAME\n")
    }
    if (length(grep("^[0-9]", mydata.test$MYDATA.NAME)) > 0) {
        stop("MYDATA names cannot start with numbers.\n")
    }
    if ((format == "DTR" | format == "DTR_ASSO" | format == "SITE" | 
        format == "SITE_ASSO")) {
        if (is.null(mydata.test$LOC)) {
            stop("Missing MYDATA data file column LOC\n")
        }
        if ((length(grep("^[a-zA-Z]", mydata.test$LOC)) > 0)) {
            stop("Missing column LOC has not to be number\n")
        }
    }
    else if (format == "REGION" | format == "REGION_ASSO") {
        if (is.null(mydata.test$LOC.START)) {
            stop("Missing MYDATA data file column LOC.START\n")
        }
        if ((length(grep("^[a-zA-Z]", mydata.test$LOC.START)) > 
            0)) {
            stop("Missing column LOC.START has not to be number\n")
        }
        if (is.null(mydata.test$LOC.END)) {
            stop("Missing MYDATA data file column LOC.END\n")
        }
        if ((length(grep("^[a-zA-Z]", mydata.test$LOC.END)) > 
            0)) {
            stop("Missing column LOC.END has not to be number\n")
        }
    }
    if (is.null(mydata.test$MYDATA.PVAL)) {
        stop("Missing MYDATA data file column MYDATA.PVAL\n")
    }
    else if (length(grep("^[a-zA-Z]", mydata.test$MYDATA.PVAL)) > 
        0) {
        stop("Missing column MYDATA.PVAL has not to be number\n")
    }
    if (format == "REGION_ASSO" | format == "DTR_ASSO" | format == 
        "SITE_ASSO") {
        if (is.null(mydata.test$MYDATA.ASSO)) {
            stop("Missing MYDATA data file column MYDATA.ASSO\n")
        }
        if ((length(grep("[a-zA-Z]", mydata.test$MYDATA.ASSO)) > 
            0)) {
            stop("Missing column MYDATA.ASSO has not to be number\n")
        }
        else if ((length(grep("[0-9|-|+]", mydata.test$MYDATA.ASSO)) == 
            length(mydata.test$MYDATA.ASSO))) {
            pos <- which(as.numeric(mydata.test$MYDATA.ASSO) > 
                0)
            neg <- which(as.numeric(mydata.test$MYDATA.ASSO) < 
                0)
            noth <- which(as.numeric(mydata.test$MYDATA.ASSO) == 
                0)
            mydata.test$MYDATA.ASSO[pos] <- "+"
            mydata.test$MYDATA.ASSO[neg] <- "-"
            if (option == 1) {
                gbl.var$mydata.data <- mydata.test
            }
            else {
                gbl.var$mydata.large.data <- mydata.test
            }
        }
        else if ((length(grep("[+|-]", mydata.test$MYDATA.ASSO)) == 
            length(mydata.test$MYDATA.ASSO))) {
        }
        else {
            dd <- length(grep("[0-9|+|-]", mydata.test$MYDATA.ASSO))
            da <- length(mydata.test$MYDATA.ASSO)
            stop("Do not recognize column MYDATA.ASSO ", dd, 
                " vs ", da, " \n")
        }
    }
    if (is.null(mydata.test$CHROMOSOME)) {
        stop("Missing MYDATA data file column CHROMOSOME\n")
    }
    else if (!grepl("^chr", mydata.test$CHROMOSOME)[1]) {
        cat("Missing column CHROMOSOME should be at UCSC format\n")
        mydata.test$CHROMOSOME <- paste("chr", mydata.test$CHROMOSOME, 
            sep = "")
        if (option == 1) {
            gbl.var$mydata.data <- mydata.test
        }
        else {
            gbl.var$mydata.large.data <- mydata.test
        }
    }
    if (option == 1) {
        mydata.test.nosort <- gbl.var$mydata.data
        mydata.test.sort <- mydata.test.nosort
        if (grepl("REGION", format)[1]) {
            mydata.test.sort <- mydata.test.nosort[order(mydata.test.nosort$LOC.START), 
                ]
        }
        else {
            mydata.test.sort <- mydata.test.nosort[order(mydata.test.nosort$LOC), 
                ]
        }
        gbl.var$mydata.data <- mydata.test.sort
    }
    else {
        mydata.test.nosort <- gbl.var$mydata.large.data
        mydata.test.sort <- mydata.test.nosort
        if (grepl("REGION", format)[1]) {
            mydata.test.sort <- mydata.test.nosort[order(mydata.test.nosort$LOC.START), 
                ]
        }
        else {
            mydata.test.sort <- mydata.test.nosort[order(mydata.test.nosort$LOC), 
                ]
        }
        gbl.var$mydata.large.data <- mydata.test.sort
    }
    cat("FINISH CHECK.FORMAT.MYDATA\n")
    return(gbl.var)
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
